digraph cluster726example {
	graph [compound=True fontname="DejaVu Sans Mono" label=example pack=False rankdir=TB ranksep=0.02]
	node [fontname="DejaVu Sans Mono"]
	edge [fontname="DejaVu Sans Mono"]
	1 [label="def _get_rng(rng_type):...\l" fillcolor="#FFFB81" shape=rectangle style="filled,solid"]
	subgraph cluster0_get_rng {
		graph [compound=True fontname="DejaVu Sans Mono" label=_get_rng pack=False rankdir=TB ranksep=0.02]
		node [fontname="DejaVu Sans Mono"]
		edge [fontname="DejaVu Sans Mono"]
		3 [label="if rng_type == 'none':\l" fillcolor="#FF6752" shape=diamond style="filled,solid"]
		4 [label="return None\l" fillcolor="#98fb98" shape=parallelogram style="filled,solid"]
		3 -> 4 [label="rng_type == 'none'" color=green]
		6 [label="if rng_type == 'int':\l" fillcolor="#FF6752" shape=diamond style="filled,solid"]
		7 [label="return 42\l" fillcolor="#98fb98" shape=parallelogram style="filled,solid"]
		6 -> 7 [label="rng_type == 'int'" color=green]
		9 [label="return np.random.RandomState(0)\l" fillcolor="#98fb98" shape=parallelogram style="filled,solid"]
		6 -> 9 [label="(rng_type != 'int')" color=red]
		3 -> 6 [label="(rng_type != 'none')" color=red]
	}
	subgraph cluster_KEY {
		graph [fontname="DejaVu Sans Mono" label=KEY]
		node [fontname="DejaVu Sans Mono"]
		edge [fontname="DejaVu Sans Mono"]
		input [fillcolor="#afeeee" shape=parallelogram style=filled]
		default [fillcolor="#FFFB81" shape=rectangle style=filled]
		if [fillcolor="#FF6752" shape=diamond style=filled]
		for [fillcolor="#FFBE52" shape=hexagon style=filled]
		while [fillcolor="#FFBE52" shape=hexagon style=filled]
		call [fillcolor="#E552FF" shape=tab style=filled]
		return [fillcolor="#98fb98" shape=parallelogram style=filled]
		try [fillcolor=orange shape=Mdiamond style=filled]
		raise [fillcolor="#98fb98" shape=house style=filled]
		if -> input [style=invis]
		input -> call [style=invis]
		for -> return [style=invis]
		return -> default [style=invis]
		try -> raise [style=invis]
	}
}
